---
// Imports
import { contentfulClient } from "../../lib/contentful";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import type { Ensaio } from "../../interfaces/contentful";
import { CheckImageUrl, slugify } from "../../lib/utils";

import { Image, Picture } from "astro:assets";
import Loader from "../../components/Loader.astro";

import Layout from "../../layouts/Layout.astro";

// Gerador de rotas estáticas
export async function getStaticPaths() {
  const ensaiosGet = await contentfulClient.getEntries({
    content_type: "ensaio",
  });

  const ensaios = ensaiosGet.items.map((item) => {
    const { titulo, descricao, fotoDeCapa, fotos } = item.fields;
    return {
      titulo,
      descricao,
      fotoDeCapa,
      fotos,
    };
  });

  const pages = ensaios.map((ensaio) => ({
    params: { slug: slugify(ensaio.titulo) },
    props: { ensaio },
  }));
  return pages;
}

// Props recebidas da rota estática
const props = Astro.props as unknown as { ensaio: Ensaio };
const { ensaio } = props;

---

<Layout title_sufixo=`${ensaio.titulo}`>
  <Loader WaitForFonts={true} />

  <h1
    class="text-3xl font-primary text-preto mb-4 mt-25 text-center px-8"
    transition:name={`titulo_${String(ensaio.titulo ?? "")
      .replace(/[^a-z0-9]/gi, "_")
      .toLowerCase()}`}
    transition:persist
  >
    {ensaio.titulo}
  </h1>
  <div
    class="text-lg font-secondary text-preto mb-4 text-center px-8 markdown"
    set:html={documentToHtmlString(ensaio.descricao)}
  />

  <!-- GALERIA -->
  <div
    class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 items-start justify-self-center gap-10 sm:gap-5 px-8 py-8"
  >
    {
      [0, 1, 2].map((colIndex) => (
        <div class="grid gap-10 sm:gap-5 max-w-[400px] justify-self-center">
          {ensaio.fotos.filter((_, index) => index % 3 === colIndex).map(
            (foto) => (
              <div class="shadow-xl/20 transition-transform duration-300 hover:scale-105">
                <Picture
                  src={`${CheckImageUrl(foto.fields.file.url)}`}
                  width={1200}
                  height={1200}
                  decoding={"async"}
                  alt={"Imagem do ensaio"}
                  formats={['webp']}
                  class="h-auto w-full max-w-full object-cover fade-in-img opacity-0 transition-opacity duration-1000"
                  loading="lazy"
                  quality={100}
                />
              </div>
            )
          )}
        </div>
      ))
    }
  </div>

  <script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
      document.querySelectorAll(".fade-in-img").forEach((img) => {
        if (img.complete) {
          // já carregada no cache
          img.classList.remove("opacity-0");
        } else {
          img.addEventListener("load", () => {
            img.classList.remove("opacity-0");
          });
        }
      });
    });
  </script>
</Layout>
