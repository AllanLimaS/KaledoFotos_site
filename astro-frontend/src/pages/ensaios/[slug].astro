---
// Imports
import fetchApi from "../../lib/strapi";
import { CheckImageUrl } from "../../lib/utils";
import type { Ensaio } from "../../interfaces/ensaio";
import { Image, Picture } from "astro:assets";
import Loader from "../../components/Loader.astro";

import Layout from "../../layouts/Layout.astro";

// Gerador de rotas estáticas
export async function getStaticPaths() {
  try {
    const ensaios = await fetchApi<Ensaio[]>({
      endpoint: "ensaios",
      query: {
        "populate[Fotos]": "1",
        //"populate[Foto_capa]": "1"
      },
      wrappedByKey: "data",
    });

    return ensaios.map((ensaio) => ({
      params: { slug: ensaio.link_da_pagina },
      props: { ensaio },
    }));
  } catch (error) {
    console.error("Erro ao buscar ensaios:", error);
    return [];
  }
}

// Props recebidas da rota estática
const { ensaio } = Astro.props;
---

<Layout title_sufixo=`${ensaio.Titulo}`>
  <Loader WaitForFonts={true} />

  <h1
    class="text-3xl font-primary text-preto mb-4 mt-25 text-center px-8"
    transition:name=`titulo_${ensaio.Titulo.replace(/[^a-z0-9]/gi, "_").toLowerCase()}`
    transition:persist
  >
    {ensaio.Titulo}
  </h1>
  <p class="text-lg font-secondary text-preto mb-4 text-center px-8">
    {ensaio.Descricao}
  </p>

  <!-- GALERIA -->
  <div
    class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 items-start justify-self-center gap-10 sm:gap-5 px-8 py-8"
  >
    {
      [0, 1, 2].map((colIndex) => (
        <div class="grid gap-10 sm:gap-5 max-w-[400px] justify-self-center">
          {ensaio.Fotos.filter((_, index) => index % 3 === colIndex).map(
            (foto) => (
              <div class="shadow-xl/20 transition-transform duration-300 hover:scale-105">
                <Image
                  src={`${CheckImageUrl(foto.url)}`}
                  width={400}
                  height={400}
                  decoding={"async"}
                  alt={foto.alternativeText || "Imagem"}
                  class="h-auto w-full max-w-full object-cover fade-in-img opacity-0 transition-opacity duration-1000"
                  loading="lazy"
                />
              </div>
            )
          )}
        </div>
      ))
    }
  </div>

  <script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
      document.querySelectorAll(".fade-in-img").forEach((img) => {
        if (img.complete) {
          // já carregada no cache
          img.classList.remove("opacity-0");
        } else {
          img.addEventListener("load", () => {
            img.classList.remove("opacity-0");
          });
        }
      });
    });
  </script>
</Layout>
