---
const { IdImg, WaitForFonts = false } = Astro.props;
---

<div
  id="loader"
  class="fixed inset-0 z-50 flex items-center justify-center bg-white transition-opacity duration-1000"
>
  <div
    class="h-10 w-10 animate-spin rounded-full border-4 border-bege-escuro border-t-transparent"
  >
  </div>
</div>

<script define:vars={{ IdImg, WaitForFonts }}>
  console.info(
    "Loader initialized with IdImg:",
    IdImg,
    "WaitForFonts:",
    WaitForFonts
  );

  const heroImages = document.querySelectorAll(`.${IdImg}`);
  const loader = document.getElementById("loader");

  let loadedCount = 0;
  const totalImages = heroImages.length;
  let fontsReady = !WaitForFonts;

  function checkAndHideLoader() {
    console.info(
      "Check loader - Images loaded:",
      loadedCount,
      "Total:",
      totalImages,
      "Fonts ready:",
      fontsReady
    );

    if (loadedCount === totalImages && fontsReady) {
      console.info("hideloader");
      if (loader) {
        loader.style.opacity = "0";
        loader.style.pointerEvents = "none";
        setTimeout(() => loader.remove(), 500);
      }
    }
  }

  function onImageLoad() {
    loadedCount++;
    checkAndHideLoader();
  }

  // Adiciona listener em todas as imagens
  heroImages.forEach((img) => {
    if (img.complete) {
      loadedCount++;
    } else {
      img.addEventListener("load", onImageLoad);
    }
  });

  // Checa se as imagens já estavam carregadas
  checkAndHideLoader();

  // Espera as fontes se necessário
  if (WaitForFonts) {
    document.fonts.ready.then(() => {
      console.info("Fonts ready");
      fontsReady = true;
      checkAndHideLoader();
    });
  }
</script>
